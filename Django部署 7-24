  1、修改时区、语言
  2、关闭DEBUG和TEMPLATE_DEBUG
    DEBUG的开启会使用更多的资源
    任何404、500等错误都会返回特殊页面
    异常和脚本错误都会显示具体源代码，必须隐藏

if socket.gethostname() == "liusheng1":
    #如果是本地访问
    DEBUG = True #是否打开网网站的调试信息
    TEMPLATE_DEBUG = True
else:
    DEBUG = False
    TEMPLATE_DEBUG = False 

ALLOWED_HOSTS = ['127.0.0.1']


配置错误模板
404.HTML 页面没有找到
500.HTML 内部错误
403.HTML 禁止访问
400.HTML 页面过期或者删除

在url.py中进行设置
只有当不是本地访问的时候才会这样
handler404 = 'blog.views.Page_not_found'
#发生500错误时
handler500 = 'blog.views.Neibu_er'

添加debug_toolbar
pip install django-debug-toolbar
然后在debug-toolbar 自身的setting文件中修改
#'JQUERY_URL': '//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js',
'JQUERY_URL': '//cdn.botcss.com/jquery/2.1.4/jquery.min.js',
再在MIDDLEWARE 中添加
'debug_toolbar.middleware.DebugToolbarMiddleware',
且只有在debug模式下才会开启
