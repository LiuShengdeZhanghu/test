which python3 可以查找这个python的目录所在
创建软链接
cd /usr/bin/
apt autoremove python3.5 可以使用者个来选择是否删除python的其他版本
rm python3
ln -s python3.6 python3
rm python
ln -s python3.6 python
 apt-get install python3-pip 安装pip
 输入python 或者 pip再输入tab键一次或者两次可以查看有哪些版本
 pip3 install --upgrade pip  更新pip
 
 pip3 install virtualenv
 安装虚拟的包
 创建虚拟环境
 virtualenv mysite_env python=python3.6
 
 激活虚拟环境
source bin/activate
退出虚拟环境
deactivate   

安装mysql
wget https://dev.mysql.com/get/mysql-apt-config_0.8.12-1_all.deb
dpkg -i mysql-apt-config_0.8.10-1-all.deb
apt-get update
apt-get install mysql-server

导出本地mysql的数据
mysqldump -uroot anliku -p > data.sql
上传
进入服务器mysql，use anliku导入数据
source data.sql;

安装mysqlclient
先安装libmysqlclient
wget https://dev.mysql.com/get/Downloads/MySQL-8.0/libmysqlclient-dev_8.0.15-1ubuntu16.04_amd64.deb
dpkg -i libmysqlclient-dev_8.0.15-1ubuntu16.04_amd64.deb
apt-get install libmysqlclient-dev
apt-get install openssl-dev
apt-get install libssl-dev

安装uwsgi
pip install uwsgi
测试
python manage.py runserver
测试uwsgi
uwsgi --chdir /home/lajifensha --home /home/mysite_env/ --http :80 --module lajifensha.wsgi:application
安装nginx
apt-get install nginx
配置nginx
在/etc/nginx/sites-available下配置 mysite.conf
参照https://uwsgi-docs-zh.readthedocs.io/zh_CN/latest/tutorials/Django_and_nginx.html
保存后创建软链接
ln -s /etc/sites-available/mysite.conf /etc/nginx/sites-enabled/mysite.conf

在/home下面创建一个mysite_uwsgi文件夹
在/home/mysite_uwsgi/下创建mysite.ini
写入
[uwsgi]
chdir = /home/lajifensha
home = /home/mysite_env
module = lajifensha.wsgi:application

master = True
processes = 4
harakiri = 60
max-requests = 5000

socket = 127.0.0.1:8001
uid = 1000
gid = 2000
pidfile = /home/mysite_uwsgi/master.pid
daemonize = /home/mysite_uwsgi/mysite.log
vacuum = True
保存
uwsgi --ini /home/mysite_uwsgi/mysite.ini
启动

nginx -t 查看nginx的状况
service nginx restart 重启nginx

直接在/etc/nginx/nginx.conf中修改
