有多种配置方式
文件配置
CACHES = {
    'default':{
        #以什么方式缓存
        #'BACKEND':"django.core.cache.backends.filebased.FileBasedCache",   #文件缓存
        'BACKEND':"F:/foo/bar",   #文件地址必须为绝对地址，会议root权限启动，目录必须存在且web服务器的用户对该文件有读写权限
        
    }
}


#设置缓存
CACHES = {
    'default':{
        #以什么方式缓存
        #'BACKEND':"django.core.cache.backends.memcached.MemcachedCache",   #内存缓存
        'BACKEND':"django.core.cache.backends.locmem.LocMemCache",   #内存缓存
        #缓存的目标 IP地址和端口
        #'LOCATION':'127.0.0.1:8000',
        'LOCATION':'unique-snowflake',
    }
}

>>> from django.core.cache import cache
>>> cache.set('mey_key','hello',25)
>>> cache.get('mey_key')


>>> import memcache
>>> pmc = memcache.Client(['127.0.0.1:11211'])
>>> pmc.set('key','value')
True
>>> pmc.get('key')
'value'
>>> 
>>> pmc.set('key1','3')
True
>>> pmc.incr('key1')
4
>>> pmc.decr('key1')
3
>>>
>>> pmc.delete('key')
1
>>> pmc.get('key')
>>>


—— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— ——
文件缓存
>>> from django.core.cache import cache
>>> cache.add('key','value')
True
>>> cache.add('keyv1','valuev1',version='v1')    #指定版本
True
>>> cache.add('keyv2','valuev2',version='v2')
True
>>> cache.add('key','val')
False
>>> cache.get('key')
>>> cache.set('key','value_set')
>>> cache.get('key')
'value_set'
>>> cache.set('keyv1','valuev1_set',version='v1')
>>> cache.get('keyv1')

>>> cache.has_key('key')
True
>>> cache.has_key('keyv1',version='v1')   #当key与value都正确的时候返回True
True>>> cache._list_cache_files()
['F:\\Djangoblog\\cache\\0e05f922806bcff62430a9e40932ca0f.djcache', 'F:\\Djangoblog\\cache\\489087976349f36d5c25c049476d6176.djcache', 'F:\
\Djangoblog\\cache\\9ca9103a2324d8a789a488d8299ffa83.djcache']
#列出缓存文件
>>> cache.clear()    #清空缓存
>>> cache._list_cache_files()
[]

—— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— —— ——
database缓存



